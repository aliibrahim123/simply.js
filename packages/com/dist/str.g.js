var se=Object.defineProperty;var t=(e,r)=>se(e,"name",{value:r,configurable:!0});var a=t((e,r="str")=>{if(typeof e!="string")throw new TypeError(`str: ${r} of type (${e?.constructor?.name}), expected (String)`);return!0},"checkstr"),c=t((e,r,o=!0)=>{if(typeof e!="number")throw new TypeError(`str: ${r} of type (${e?.constructor?.name}), expected (Number)`);if(!Number.isInteger(e)||e<=(o?-1:0))throw new TypeError(`str: ${r} is (${e}), expected positive integer`)},"checkpInt"),l=t((e,r)=>{if(typeof e!="number")throw new TypeError(`str: ${r} of type (${e?.constructor?.name}), expected (Number)`);if(!Number.isInteger(e))throw new TypeError(`str: ${r} is (${e}), expected integer`)},"checkint"),h=t((e,r="fn")=>{if(typeof e!="function")throw new TypeError(`str: ${r} of type (${e?.constructor?.name}), expected (Function)`)},"checkfn"),w=t((e,r)=>{if(typeof e!="string"&&!(e instanceof RegExp))throw new TypeError(`str: ${r} of type (${e?.constructor?.name}), expected (String) or (RegExp)`)},"checkstrReg");var C=t((e,r=!1)=>(a(e),r?Array.from(e):e.split("")),"chars"),$=t((e,r=!1)=>(a(e),(r?Array.from(e):e.split("")).map(o=>o.codePointAt(0))),"codePoints"),i=t((e,r=!1)=>(a(e),e.trim().split(r?/[\s_-]+|(?=[A-Z])/g:/\s+/)),"words"),g=t(e=>(a(e),e.split(`
`)),"lines"),d=t((e,r)=>{a(e),c(r,"max",!1);for(var o=[],p=0,n=0;;){if(p+=r,p>e.length)return o.push(e.slice(n)),o;if(p=e.lastIndexOf(" ",p),p<=n&&(p=e.indexOf(" ",n+r)),o.push(e.slice(n,p===-1?e.length:p)),p===-1)return o;p++,n=p}},"splitLinesAt");var y=t((e,r)=>(a(e),c(r,"length",!1),e.slice(0,r)),"first"),k=t((e,r)=>(a(e),c(r,"length",!1),e.slice(-r)),"last"),x=t((e,r=0,o=e?.length,p=!0,n=!0)=>{a(e),l(r,"start"),l(o,"end");var s=e.length;r=r<0?r+s:r,r=Math.max(0,Math.min(r,s)),o=o<0?o+s:o,o=Math.max(0,Math.min(o,s));var u=r===0?0:p?e.lastIndexOf(" ",r):e.indexOf(" ",r),v=o===s?s:n?e.indexOf(" ",o):e.lastIndexOf(" ",o);return u===-1&&(u=p?0:s),v===-1&&(v=n?s:0),e.slice(u?u+1:0,v)},"sliceWords");var R=t((e,r,o="...")=>(a(e),c(r,"length",!1),a(o,"end"),r=Math.max(0,r-o.length),e.length>r?e.slice(0,r)+o:e),"truncate"),L=t((e,r,o="...")=>(a(e),c(r,"length",!1),a(o,"end"),r=Math.max(0,r-o.length),e.length>r?x(e,0,r,!0,!1)+o:e),"prune");var A=t((e,r)=>(a(e),w(r,"pattern"),e.split(r).length),"count"),E=t((e,r=!1)=>(a(e),(r?Array.from(e):e.split("")).reverse().join("")),"reverse"),M=t((e,r=0,o=e?.length,p="")=>(a(e),l(r,"start"),l(o,"end"),a(p,"toAdd"),e.slice(0,r)+p+e.slice(o)),"splice"),T=t((e,r=0,o="")=>(a(e),l(r,"position"),a(o,"toAdd"),e.slice(0,r)+o+e.slice(r)),"insert");var j=t(e=>e[0].toUpperCase()+e.slice(1).toLowerCase(),"_capitalize"),ce=t((e,r)=>r===0?e.toLowerCase():e[0].toUpperCase()+e.slice(1).toLowerCase(),"camelize"),le=t((e,r)=>r===0?e[0].toUpperCase()+e.slice(1).toLowerCase():e.toLowerCase(),"sentencize"),I=t(e=>(a(e),e[0].toUpperCase()+e.slice(1).toLowerCase()),"capitalize"),O=t((e,r,o=" ")=>(a(e),h(r,"mapper"),a(o,"join"),i(e,!0).map(r).join(o)),"convCase"),U=t(e=>i(e,!0).map(ce).join(""),"camelCase"),N=t(e=>i(e,!0).map(j).join(""),"pascalCase"),z=t(e=>i(e,!0).join("_").toLowerCase(),"snakeCase"),b=t(e=>i(e,!0).join("_").toUpperCase(),"constantCase"),H=t(e=>i(e,!0).join("-").toLowerCase(),"kebabCase"),P=t(e=>i(e,!0).join("_").toUpperCase(),"trainCase"),_=t(e=>i(e,!0).map(j).join(" "),"titleCase"),W=t(e=>i(e,!0).map(le).join(" "),"sentenceCase"),B=t(e=>i(e,!0).join(" ").toLowerCase(),"lowerCase"),q=t(e=>i(e,!0).join(" ").toUpperCase(),"upperCase");var F=t((e,r)=>r===void 0?(a(e,"match"),r=new RegExp("^["+e+"]+$"),o=>a(o)&&r.test(o)):(a(e),a(r,"match"),new RegExp("^["+r+"]+$").test(e)),"containsOnly"),S=t((e,r)=>r===void 0?(a(e,"match"),r=new RegExp("^[^"+e+"]+$"),o=>a(o)&&r.test(o)):(a(e),a(r,"match"),new RegExp("^[^"+r+"]+$").test(e)),"containsNot"),ue=/^[a-zA-Z]+$/,xe=/^[a-z]+$/,ve=/^[A-Z]+$/,fe=/^\w+$/,me=/^\d+$/,Z=/^\s+$/,he=/^[!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~]+$/,we=/^[+-]?\d+$/,Ce=/^[+-]?\d*\.?\d+(?:[eE][+-]?\d+)?$/,$e=/^[+-]?(?:0b)?[01]+$/,ge=/^[+-]?(?:0o)?[0-7]+$/,de=/^[+-]?(?:0x)?[0-9a-fA-F]+$/,D=t(e=>a(e)&&ue.test(e),"isAlpha"),G=t(e=>a(e)&&xe.test(e),"isAlphaLower"),J=t(e=>a(e)&&ve.test(e),"isAlphaUpper"),K=t(e=>a(e)&&fe.test(e),"isAlphaNumerial"),Q=t(e=>a(e)&&me.test(e),"isDigit"),V=t(e=>a(e)&&Z.test(e),"isWhitespace"),X=t(e=>a(e)&&(e===""||Z.test(e)),"isBlank"),Y=t(e=>a(e)&&he.test(e),"isPunctuation"),ee=t(e=>a(e)&&we.test(e),"isInt"),re=t(e=>a(e)&&Ce.test(e),"isFloat"),te=t(e=>a(e)&&$e.test(e),"isBin"),ae=t(e=>a(e)&&ge.test(e),"isOcta"),oe=t(e=>a(e)&&de.test(e),"isHex");var ye={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},ke={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"},pe=t(e=>(a(e),e.replace(/&<>'"/g,r=>ye[r])),"escapeHTML"),ie=t(e=>(a(e),e.replace(/&amp|&lt|&gt|&quot|&#39/g,r=>ke[r])),"unescapeHTML"),ne=t(e=>(a(e),e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")),"escapeRegExp");var Re=t(()=>{var e=t(r=>function(...o){return r(this,...o)},"handle");for(let r in f)Object.defineProperty(String.prototype,"$"+r,{value:e(f[r]),enumerable:!1})},"extendNative"),f={chars:C,codePoints:$,words:i,lines:g,splitLinesAt:d,first:y,last:k,sliceWords:x,truncate:R,prune:L,count:A,reverse:E,splice:M,insert:T,capitalize:I,convCase:O,camelCase:U,pascalCase:N,snakeCase:z,constantCase:b,kebabCase:H,trainCase:P,titleCase:_,sentenceCase:W,lowerCase:B,upperCase:q,containsOnly:F,containsNot:S,isAlpha:D,isAlphaLower:G,isAlphaUpper:J,isAlphaNumerial:K,isDigit:Q,isWhitespace:V,isBlank:X,isPunctuation:Y,isInt:ee,isFloat:re,isBin:te,isOcta:ae,isHex:oe,escapeHTML:pe,unescapeHTML:ie,escapeRegExp:ne,extendNative:Re},m=f;globalThis.$str=m;var nr=m;export{U as camelCase,I as capitalize,C as chars,$ as codePoints,b as constantCase,S as containsNot,F as containsOnly,O as convCase,A as count,nr as default,pe as escapeHTML,ne as escapeRegExp,Re as extendNative,y as first,T as insert,D as isAlpha,G as isAlphaLower,K as isAlphaNumerial,J as isAlphaUpper,te as isBin,X as isBlank,Q as isDigit,re as isFloat,oe as isHex,ee as isInt,ae as isOcta,Y as isPunctuation,V as isWhitespace,H as kebabCase,k as last,g as lines,B as lowerCase,N as pascalCase,L as prune,E as reverse,W as sentenceCase,x as sliceWords,z as snakeCase,M as splice,d as splitLinesAt,_ as titleCase,P as trainCase,R as truncate,ie as unescapeHTML,q as upperCase,i as words};
