var Wr=Object.defineProperty;var t=(r,e)=>Wr(r,"name",{value:e,configurable:!0});var f=t((r,e)=>e?r?.constructor===e:i=>r?.constructor===i,"isOfType"),c=t((r,e)=>e?r instanceof e:i=>r instanceof i,"isInstanceOf"),y=t(r=>typeof r=="string","isStringP"),x=t(r=>r?.constructor===String,"isString"),l=t(r=>typeof r=="number","isNumberP"),u=t(r=>r?.constructor===Number,"isNumber"),m=t(r=>typeof r=="boolean","isBooleanP"),g=t(r=>r?.constructor===Boolean,"isBoolean"),h=t(r=>typeof r=="bigint","isBigIntP"),d=t(r=>r?.constructor===BigInt,"isBigInt"),b=t(r=>typeof r=="symbol","isSymbol"),v=t(r=>r===null||typeof r!="object"&&typeof r!="function","isPrimitive"),A=t(r=>r===null,"isNull"),N=t(r=>r===void 0,"isUndefined"),S=t(r=>r==null,"isNill"),O=t(r=>r!==void 0,"isDefined"),I=t(r=>!!r,"isTruthy"),k=t(r=>!r,"isFalsy"),E=t(r=>r===!0,"isTrue"),w=t(r=>r===!1,"isFalse"),B=t(r=>typeof r=="object"||r!==null,"isObject"),P=t(r=>r?.constructor===Object,"isPlainObject"),T=Array.isArray,j=t(r=>typeof r?.length=="number"||typeof r?.size=="number","isArrayLike"),W=t(r=>{var e=typeof r?.length=="number"?r?.length:r?.size;return Number.isInteger(e)&&e>=0&&e<=Number.MAX_SAFE_INTEGER},"isSafeArrayLike"),F=t(r=>r instanceof ArrayBuffer,"isArrayBuffer"),L=t(r=>r instanceof TypedArray,"isTypedArray"),R=t(r=>r instanceof DataView,"isDataView"),D=t(r=>r instanceof Blob,"isBlob"),U=t(r=>r instanceof Date,"isDate"),M=t(r=>r instanceof RegExp,"isRegExp"),s=Number.isInteger,z=Number.isNaN,C=Number.isFinite,V=Number.isSafeInteger,$=t(r=>typeof r=="function","isFunction"),_=t(r=>r instanceof Promise,"isPromise"),G=t(r=>!!r?.prototype,"isConstructor"),X=t(r=>r instanceof Error,"isError"),q=t(r=>r instanceof Map,"isMap"),H=t(r=>r instanceof Set,"isSet"),J=t(r=>r instanceof WeakMap,"isWeakMap"),K=t(r=>r instanceof WeakSet,"isWeakSet"),Q=t(r=>r?.length===0||r?.size===0||typeof r=="object"&&Object.keys(r).length===0,"isEmpty"),Y=t(r=>s(r)&&r>=-128&&r<=127,"isInt8"),Z=t(r=>s(r)&&r>=-32768&&r<=32767,"isInt16"),rr=t(r=>s(r)&&r>=-2147483648&&r<=2147483647,"isInt32"),er=t(r=>s(r)&&r>=0&&r<=255,"isUint8"),tr=t(r=>s(r)&&r>=0&&r<=65535,"isUint16"),ir=t(r=>s(r)&&r>=0&&r<=4294967295,"isUint32"),Fr=Function.prototype.toString,or=t(r=>typeof r=="function"&&Fr.call(r).includes("[native code]"),"isNative");var o=t((r,e)=>{if(e===void 0)return i=>o(i,r);if(typeof e=="function")return e(r);if(Array.isArray(e))return Array.isArray(r)&&e.every((i,n)=>o(i,r[n]));if(typeof e=="object"&&e!==null){if(e instanceof RegExp)return typeof r=="string"&&e.test(r);if(typeof r!="object"||r===null)return!1;if(e instanceof Date)return r instanceof Date&&Number(r)===Number(e);for(let i in e)if(!o(e[i],r[i]))return!1;return!0}return Object.is(e,r)},"check"),p=t((r,e,i)=>{if(!Array.isArray(e))throw new TypeError(`match: predicates of type (${e?.constructor?.name}), expected (Array)`);for(let n=0;n<e.length;n++){let a=e[n];if(!Array.isArray(a))throw new TypeError(`match: predicate at index (${n}) of type (${a?.constructor?.name}), expected (Array)`);if(o(r,a[0]))return typeof a[1]=="function"?a[1](r):a[1]}return typeof i=="function"?i(r):i},"handle"),nr=t(r=>(...e)=>p(r,e.slice(0,-1),e[e.length-1]),"match");var sr=t(r=>r,"otherwise");var ar=t(r=>e=>o(e,r),"is"),pr=t(r=>e=>e===r,"isStrictly"),fr=t(r=>e=>e==r,"isLosely"),cr=t(r=>e=>e!==r,"isNotStrictly"),yr=t(r=>e=>e!=r,"isNotLosely"),xr=t(r=>e=>e!=null&&e[r]!==void 0,"has"),lr=t(r=>e=>e!=null&&e.hasOwnProperty(r),"hasOwn"),ur=t((r,e,...i)=>n=>n!=null&&typeof n[r]=="function"&&o(n[r](...i),e),"callAndCheck");var mr=t(r=>e=>e>r,"gt"),gr=t(r=>e=>e<r,"lt"),hr=t(r=>e=>e>=r,"gte"),dr=t(r=>e=>e<=r,"lte"),br=t((r,e)=>i=>i>r&&i<e,"inRange");var vr=t(r=>{if(r.length===0)throw new TypeError("match: arguments length of (0)")},"checkargs"),Ar=t(r=>e=>e?.length===r||e?.size===r,"ofLength"),Nr=t((r,e)=>i=>Array.isArray(i)&&i.includes(r,e),"includes"),Sr=t((...r)=>vr(r)&&(e=>{if(!e)return!1;for(let i=0;i<r.length;i++)if(!o(e[i],r[i]))return!1;return!0}),"firstOf"),Or=t((...r)=>vr(r)&&(e=>{if(!e)return!1;for(let i=0;i<r.length;i++)if(!o(e[e.length-(r.length-i)],r[i]))return!1;return!0}),"lastOf"),Ir=t(r=>e=>Array.isArray(e)&&e.length&&e.every(i=>o(i,r)),"every"),kr=t(r=>e=>Array.isArray(e)&&e.length&&e.some(i=>o(i,r)),"some");var Er=t(r=>e=>typeof e=="string"&&e.startsWith(r),"startsWith"),wr=t(r=>e=>typeof e=="string"&&e.endsWith(r),"endsWith"),Br=t(r=>{if(typeof r!="string"&&!(r instanceof RegExp))throw new TypeError("match: matcher of type ("+r?.constructor?.name+"), expected (String) or (RegExp)");return typeof r=="string"?e=>e.includes(r):e=>r.test(e)},"matchString");var Pr=t(r=>e=>!o(e,r),"not"),Tr=t((...r)=>e=>r.some(i=>o(e,i)),"anyOff"),jr=t((...r)=>e=>r.every(i=>o(e,i)),"allOff");var se={match:nr,handle:p,check:o,otherwise:sr,is:ar,isStrictly:pr,isLosely:fr,isNotStrictly:cr,isNotLosely:yr,has:xr,hasOwn:lr,callAndCheck:ur,not:Pr,allOff:jr,anyOff:Tr,gt:mr,lt:gr,gte:hr,lte:dr,inRange:br,ofLength:Ar,includes:Nr,firstOf:Sr,lastOf:Or,every:Ir,some:kr,startsWith:Er,endsWith:wr,matchString:Br,isOfType:f,isInstanceOf:c,isStringP:y,isString:x,isNumberP:l,isNumber:u,isBooleanP:m,isBoolean:g,isBigIntP:h,isBigInt:d,isSymbol:b,isPrimitive:v,isNull:A,isUndefined:N,isNill:S,isDefined:O,isTruthy:I,isFalsy:k,isTrue:E,isFalse:w,isObject:B,isPlainObject:P,isArray:T,isArrayLike:j,isSafeArrayLike:W,isArrayBuffer:F,isTypedArray:L,isDataView:R,isBlob:D,isDate:U,isRegExp:M,isInteger:s,isNaN:z,isFinite:C,isSafeInteger:V,isFunction:$,isPromise:_,isConstructor:G,isError:X,isMap:q,isSet:H,isWeakMap:J,isWeakSet:K,isEmpty:Q,isInt8:Y,isInt16:Z,isInt32:rr,isUint8:er,isUint16:tr,isUint32:ir,isNative:or};export{jr as allOff,Tr as anyOff,ur as callAndCheck,o as check,se as default,wr as endsWith,Ir as every,Sr as firstOf,mr as gt,hr as gte,p as handle,xr as has,lr as hasOwn,br as inRange,Nr as includes,ar as is,T as isArray,F as isArrayBuffer,j as isArrayLike,d as isBigInt,h as isBigIntP,D as isBlob,g as isBoolean,m as isBooleanP,G as isConstructor,R as isDataView,U as isDate,O as isDefined,Q as isEmpty,X as isError,w as isFalse,k as isFalsy,C as isFinite,$ as isFunction,c as isInstanceOf,Z as isInt16,rr as isInt32,Y as isInt8,s as isInteger,fr as isLosely,q as isMap,z as isNaN,or as isNative,S as isNill,yr as isNotLosely,cr as isNotStrictly,A as isNull,u as isNumber,l as isNumberP,B as isObject,f as isOfType,P as isPlainObject,v as isPrimitive,_ as isPromise,M as isRegExp,W as isSafeArrayLike,V as isSafeInteger,H as isSet,pr as isStrictly,x as isString,y as isStringP,b as isSymbol,E as isTrue,I as isTruthy,L as isTypedArray,tr as isUint16,ir as isUint32,er as isUint8,N as isUndefined,J as isWeakMap,K as isWeakSet,Or as lastOf,gr as lt,dr as lte,nr as match,Br as matchString,Pr as not,Ar as ofLength,sr as otherwise,kr as some,Er as startsWith};
